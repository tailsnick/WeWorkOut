@model IEnumerable<WeWorkOut.Models.Goal>

@{
    ViewData["Title"] = "Index";
}

<link rel="stylesheet" href="~/css/goals.css" />

<h1>My Exercise Goals</h1>

<div class="goal_create">
    <h3>Create a new goal!</h3>
    <form>
        <div class="form_group">
            <label>Exercise</label>
            <select name="exercises">
                <option value="noneSelected"></option>
                @foreach (Exercise e in (List<Exercise>)ViewData["ExerciseOptions"])
                {
                    <option value=@e.Name>@e.Name</option>
                }
            </select>
        </div>
        <div class="form_group">
            <label>Quantity</label>
            <input type="number" name="quantity" />
        </div>
        <div class="form_group">
            <label>Units</label>
            <select name="units">
                <option value="noneSelected"></option>
                @foreach (Exercise e in (List<Exercise>)ViewData["ExerciseOptions"])
                {
                    <option value=@e.Name>@e.Name</option>
                }
            </select>
        </div>
        <div class="form_group">
            <button>Add</button>
        </div>
    </form>
</div>
<div>
    <a>Change Units</a>
</div>


<table class="table table-striped table-bordered goals_table">
    <thead class="thead-dark">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Exercise)
            </th>
            <th>Quantity</th>
            <th>Units</th>
            <th>
                @Html.DisplayNameFor(model => model.Deadline)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Completed)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Exercise.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MeasurementQuantity)
                </td>
                <td>
                    @{
                        if (item.MeasurementType.Equals("Reps"))
                        {
                            <text>@TempData["RepsUnits"]</text>
                        }
                        else if (item.MeasurementType.Equals("Weight"))
                        {
                            <text>@TempData["WeightUnits"]</text>
                        }
                        else if (item.MeasurementType.Equals("Distance"))
                        {
                            <text>@TempData["DistanceUnits"]</text>
                        }
                        else if (item.MeasurementType.Equals("Time"))
                        {
                            <text>@TempData["TimeUnits"]</text>
                        }
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Deadline)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Completed)
                </td>
                <td>
                    <form>
                        <button>Modify</button>
                        <button>Delete</button>
                    </form>
                </td>
            </tr>
        }
        </tbody>
</table>
